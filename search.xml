<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Leetcode-66</title>
    <url>/2024/07/18/Leetcode-66/</url>
    <content><![CDATA[<h2 id="66-加一"><a href="#66-加一" class="headerlink" title="66.加一"></a>66.加一</h2><p>给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。最高位数字存放在数组的首位，数组中每个元素只存储单个数字。你可以假设除了整数 0 之外，这个整数不会以零开头。</p>
<p>示例 1：<br>输入：digits &#x3D; [1,2,3]<br>输出：[1,2,4]<br>解释：输入数组表示数字 123。</p>
<p>示例 2：<br>输入：digits &#x3D; [4,3,2,1]<br>输出：[4,3,2,2]<br>解释：输入数组表示数字 4321。</p>
<p>示例 3：<br>输入：digits &#x3D; [0]<br>输出：[1]</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>   题目中的解释没啥卵用，直接按照数组做就行了。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    vector&lt;int&gt; plusOne(vector&lt;int&gt;&amp; digits) &#123;</span><br><span class="line">        <span class="keyword">for</span>(int i=digits.size()-1;i&gt;=0;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            digits[i]++;</span><br><span class="line">            <span class="keyword">if</span>(digits[i]==10)</span><br><span class="line">            &#123;</span><br><span class="line">                digits[i]=0;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">return</span> digits;</span><br><span class="line">        &#125;</span><br><span class="line">        digits.insert(digits.begin(),1);</span><br><span class="line">        <span class="built_in">return</span> digits;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode刷题</category>
        <category>简单</category>
      </categories>
      <tags>
        <tag>Leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode-13</title>
    <url>/2024/07/20/Leetcode-13/</url>
    <content><![CDATA[<h2 id="13-罗马数字转整数"><a href="#13-罗马数字转整数" class="headerlink" title="13. 罗马数字转整数"></a>13. 罗马数字转整数</h2><p>罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。</p>
<p>字符          数值<br>I             1<br>V             5<br>X             10<br>L             50<br>C             100<br>D             500<br>M             1000</p>
<p>例如， 罗马数字 2 写做 II ，即为两个并列的 1 。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。 通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：<br>    I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。<br>    X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。<br>    C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。<br>给定一个罗马数字，将其转换成整数。</p>
<p>示例 1:<br>输入: s &#x3D; “III”<br>输出: 3</p>
<p>示例 2:<br>输入: s &#x3D; “IV”<br>输出: 4</p>
<p>示例 3:<br>输入: s &#x3D; “IX”<br>输出: 9</p>
<p>示例 4:<br>输入: s &#x3D; “LVIII”<br>输出: 58<br>解释: L &#x3D; 50, V&#x3D; 5, III &#x3D; 3.</p>
<p>示例 5:<br>输入: s &#x3D; “MCMXCIV”<br>输出: 1994<br>解释: M &#x3D; 1000, CM &#x3D; 900, XC &#x3D; 90, IV &#x3D; 4.</p>
<p>提示：<br>    1 &lt;&#x3D; s.length &lt;&#x3D; 15<br>    s 仅含字符 (‘I’, ‘V’, ‘X’, ‘L’, ‘C’, ‘D’, ‘M’)<br>    题目数据保证 s 是一个有效的罗马数字，且表示整数在范围 [1, 3999] 内<br>    题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。<br>    IL 和 IM 这样的例子并不符合题目要求，49 应该写作 XLIX，999 应该写作 CMXCIX 。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>首先考虑hashmap实现罗马数字的转换；其次上一个比下一个罗马数字大则减去小的，其他情况直接加即可。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int romanToInt(string s) &#123;</span><br><span class="line">        unordered_map&lt;char,int&gt; mymap;</span><br><span class="line">        int result=0;</span><br><span class="line">        mymap=&#123;</span><br><span class="line">            &#123;<span class="string">&#x27;I&#x27;</span>,1&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;V&#x27;</span>,5&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;X&#x27;</span>,10&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;L&#x27;</span>,50&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;C&#x27;</span>,100&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;D&#x27;</span>,500&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;M&#x27;</span>,1000&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span>(int i=0;i&lt;s.length();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(mymap[s[i]]&lt;mymap[s[i+1]])</span><br><span class="line">            result-=mymap[s[i]];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            result+=mymap[s[i]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Leetcode刷题</category>
        <category>简单</category>
      </categories>
      <tags>
        <tag>Leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode-69</title>
    <url>/2024/07/14/Leetcode-69/</url>
    <content><![CDATA[<h2 id="69-x-的平方根"><a href="#69-x-的平方根" class="headerlink" title="69. x 的平方根"></a>69. x 的平方根</h2><p>  给你一个非负整数 x ，计算并返回 x 的 算术平方根。由于返回类型是整数，结果只保留整数部分，小数部分将被舍去。 注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5)或者x ** 0.5。</p>
<p>示例 1：<br>输入：x &#x3D; 4<br>输出：2</p>
<p>示例 2：<br>输入：x &#x3D; 8<br>输出：2<br>解释：8 的算术平方根是 2.82842…, 由于返回类型是整数，小数部分将被舍去。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>暴力递增，超过则返回-1的结果，等于则直接返回结果。<br>mark：变量要使用long long int.<br>###代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int mySqrt(int x) &#123;</span><br><span class="line">        <span class="keyword">if</span>(x==0) <span class="built_in">return</span> 0;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x==1) <span class="built_in">return</span> 1;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        long long int a=1;</span><br><span class="line">        <span class="keyword">while</span>(a*a&lt;x)</span><br><span class="line">        a+=1;</span><br><span class="line">        <span class="keyword">if</span>(a*a==x) <span class="built_in">return</span> a;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">return</span> a-1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Leetcode刷题</category>
        <category>简单</category>
      </categories>
      <tags>
        <tag>Leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Day-1</title>
    <url>/2024/07/19/BydDairy-1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="404a96602680ff282e592b8284dfe9ec4928bc859ef5aa5ffe475d537b905653">83e4f756d680019cc75bb3d7e0230dd089e0273a38cca4f9489a923d67f98685cf6e0f619aefe6fa6ec54ff22dfab019006d4845699a04cdbf5d64ba7a0cffbb9ab00901d1679a30a32b4651513136553f9a503fb5844f8e8826b07fa95694690d9e506c2355a0429b3cc3d776ca9ae9c4524968e9b65a2aa2468b6534b286e714b6e1f00f17277416172b0d48062f09a73273df50c98f4e28d0595e11d1977b86a658f8b9bb5544ccfd0d56aa062fa751ec4e4c41a2172104efea339a263cbb2acb8f4030c629262e9311e558b8d41e4ae7633961fed57a2fb61e7c522f984ab3c36621057d0a1dbbe7db075cbde56edd4d18e535c3869bf2aaf78afdf4e2d2f21b8bb311e21769a4c574b82ef4e31249f4b33fbca8844df4a7ae42be551dcea4d143bd11bf585f021f445a6c3f78e3875bea9a049d23c366e212f4404d0ad8139cd927d371c6bd53f5f40d9e9c7ff1ea759bdbb26bb0663d014ff098f7ff8c93fc0f04176f53b25d5562eb954b0721153e0175bcfa23461a7ae298fdf9416f3c2c81cf2b9922cdf4910de3e400f919cf250696b50f9799e4acc232f688d848f78580cf07df46914d6e5cc89ec1c07aba98f3cc664cb65f1f876ad5716a68ee09c3ee975d38c547d464056703d62c49b9671f050362e7061cd3c23c283e1e674d565c3eeb50951d906e3dd11e7f4a229f4360742d4541ddc0c2b28338551fae4785eb6d550bda85e361fef3071a93b6dd7e4c73602ae3b4f473a01e9ab7a555ba752597fce90028b6c9f6a38459e1e5d2065e968b063a4233396f4841e4900b3404e565bfa2fbda1aa8b7d5ac617cb00d956cdfbcd6452e4575d02fbac4c065a5c2b4c58e1b0fce48fa2dc6aaf6ea2d36e6b0ad905eb2b1a94d8cc4004a59d5a75f2581be9a1d559e64b1980be6072bebbf65d2ac5f2ef9f727ce6a296f4296bb681c53cad136d203cb48fcc2a7c1147af31a46e6d0328c8118fb6eddb08266a7becab99a11be133e6407ff81bbe14fd32b96accaa2c2945c9489324873bca0dc8231e3a7623918576d70a1b14e89d5dd42473333757c250f824db008e9379e535950c0da8cced7f0c7d3f0f6190143aaa97163a462a3bccbd88b8e901c244ea025565ed32bcf5b68b737052a94dec43a02f1781c9241d3c1f8a864063bd3cc5c21916e97fa37aab53ca759839cf6f9e00f6180c226e74fb345a2861bf16e38c262c10a711af0569ccd206ff2ddf52b9380584649dc2751698fe76feea00e8550d2c64beb9d61318b52b48b69592012a4a3dd564f6b89ec34b4a4212c8e42cf445607d0364ffb82d4ee524852973284fcd8ba5a42e9208d5b8a9933703a14b32d1427c276f5391cb077f7623fbc01d1a928916c52bd20efb3e65a89e0023e7704204c7131619a57e2268eee51f283172f406062cdb1219878f3a765496755d611299909db51ff0cfbd134dbcc67a1e70f648a6bbe4fe510f91e71c3d013358f95fa6f3598bad2ceed397da93030c4243f70be12aa39d06da6b00b910fbb07cb4e79c7edbf9d1d2688aa6d95029a104ebe277c21f8c41112975ade63414ebd5fb3e1574b1340647d21752e5a7bea4c3a5e54f0df05befc9fc4751590e74a8afb5e4250c4ed23ebfa5de70742c2d95615488e7e5f73af20fc5a6692956473bf1f393e9f9258e2db52824f10d3ec896fa3164c7dfdf82c440197931410e39547ad14db514db60000f41bd01225d17852881131616f7376a5f2f526fb16584b2f9d59be77bbed18e0f90cc53e3d4f17731dfd5ad85469d59502d165297a879c4fe468466bbe4ba1e125b7be648e22dd1ff9c1ab0e7314c6453e34e38b89c987226d918d97fbfa70816725da00feb6b45adb15509defd8e541057c81a91d8ea2e36b5fd60903f3cba6cc479e138dc8580ffe097b3225856be45c1abd0a739e8a9be0f86ccea1b3714ab6ef30b1fd65a55f64fb37e02223fa3b02c34fc52b30e66080</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看文章</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>BydDiary</category>
      </categories>
      <tags>
        <tag>Diary</tag>
      </tags>
  </entry>
</search>
